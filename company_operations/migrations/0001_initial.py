# Generated by Django 2.2.6 on 2019-12-03 17:42

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import mixins.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mixins', '0001_initial'),
        ('general_accounting', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunalServisePayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', mixins.models.MyDateField(auto_now_add=True)),
                ('next_payment', models.DateField()),
                ('payment_value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation', models.TextField()),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Fuel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.TextField()),
                ('fuel_price', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_price', models.FloatField(default=0.0)),
                ('markup_rate', models.FloatField(default=0.0)),
                ('markup_price', models.FloatField(default=0.0)),
                ('name', models.TextField()),
                ('dozation', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', mixins.models.MyDateField(auto_now_add=True)),
                ('in_queue', models.BooleanField(default=False)),
                ('started', models.BooleanField(default=False)),
                ('performed', models.BooleanField(default=False)),
                ('check_on_start_arrival', models.BooleanField(default=False)),
                ('on_way_to_start', models.BooleanField(default=False)),
                ('arrival_time', models.DateTimeField(blank=True, null=True)),
                ('way_costs', models.FloatField(default=0.0)),
                ('used_vehicle_id', models.IntegerField(blank=True, null=True)),
                ('arrival_to_start', models.DateTimeField(blank=True, null=True)),
                ('total_price', models.FloatField(default=0.0)),
                ('total_markup_price', models.FloatField(default=0.0)),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='general_accounting.TaxRate')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='accounts.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', mixins.models.MyDateField(auto_now_add=True)),
                ('payment_value', models.FloatField(default=0.0)),
                ('date_to_pay', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Veh_repair_Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', mixins.models.MyDateField(auto_now_add=True)),
                ('next_payment', models.DateField()),
                ('payment_value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='WareHouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pharmacy_number', models.IntegerField()),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='warehouse', to='mixins.Address')),
            ],
        ),
        migrations.CreateModel(
            name='WHTransferClaim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('accepted', models.BooleanField(default=False)),
                ('started', models.BooleanField(default=False)),
                ('performed', models.BooleanField(default=False)),
                ('created', mixins.models.MyDateField(auto_now_add=True)),
                ('executed', models.BooleanField(default=False)),
                ('from_wh', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='WHTransferClaims_from', to='company_operations.WareHouse')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='WHTransferClaims', to='company_operations.Product')),
                ('to_wh', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='WHTransferClaims_to', to='company_operations.WareHouse')),
            ],
        ),
        migrations.CreateModel(
            name='WHTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', mixins.models.MyDateField(auto_now_add=True)),
                ('started', models.BooleanField(default=False)),
                ('performed', models.BooleanField(default=False)),
                ('on_way_to_start', models.BooleanField(default=False)),
                ('check_on_start_arrival', models.BooleanField(default=False)),
                ('arrival_time', models.DateTimeField(blank=True, null=True)),
                ('way_costs', models.FloatField(default=0.0)),
                ('used_vehicle_id', models.IntegerField(blank=True, null=True)),
                ('arrival_to_start', models.DateTimeField(blank=True, null=True)),
                ('from_wh', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='WHTransfers_from', to='company_operations.WareHouse')),
                ('to_wh', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='WHTransfers_to', to='company_operations.WareHouse')),
            ],
        ),
        migrations.CreateModel(
            name='WHProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('self_rate', models.FloatField(default=0.0)),
                ('threshold', models.IntegerField()),
                ('threshold_days', models.IntegerField()),
                ('reserved_by_clients', models.IntegerField(default=0)),
                ('soon_expire', models.BooleanField(default=False)),
                ('in_queue_to_purchase', models.BooleanField(default=False)),
                ('in_queue_to_wht', models.BooleanField(default=False)),
                ('quantity_to_wht_dispatch', models.IntegerField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whps', to='company_operations.Product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whps', to='company_operations.WareHouse')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_consumption', models.FloatField(default=0.0)),
                ('vehicle_name', models.TextField()),
                ('vehicle_price', models.FloatField(default=0.0)),
                ('veh_repair_price_month', models.FloatField(default=0.0)),
                ('used_now', models.BooleanField(default=False)),
                ('vehicle_full_address_now', models.TextField()),
                ('go_from_addr', models.TextField()),
                ('go_to_addr', models.TextField()),
                ('transfering', models.BooleanField(default=False)),
                ('for_transporting', models.CharField(max_length=30)),
                ('fuel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='company_operations.Fuel')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', mixins.models.MyDateField(auto_now_add=True)),
                ('min_day_quantity', models.IntegerField()),
                ('max_day_quantity', models.IntegerField()),
                ('percent_pre_buy', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=2)),
                ('total_price', models.FloatField(default=0.0)),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='general_accounting.TaxRate')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='company_operations.WareHouse')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseClaim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', mixins.models.MyDateField(auto_now_add=True)),
                ('expire_day', models.DateField()),
                ('quantity', models.IntegerField()),
                ('max_days_on_delivery', models.IntegerField()),
                ('executed', models.BooleanField(default=False)),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_claims', to='company_operations.Purchase')),
                ('whp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_claims', to='company_operations.WHProduct')),
            ],
        ),
        migrations.AddField(
            model_name='purchase',
            name='wh',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='company_operations.WareHouse'),
        ),
        migrations.CreateModel(
            name='HireFireCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', mixins.models.MyDateField(auto_now_add=True)),
                ('next_check', models.DateField()),
                ('fired_that_month', models.ManyToManyField(related_name='fire_check_added', to='accounts.Worker')),
                ('hired_that_month', models.ManyToManyField(related_name='hire_check_added', to='accounts.Worker')),
                ('will_be_fire_next_month', models.ManyToManyField(related_name='fire_check_will_be_added', to='accounts.Worker')),
            ],
        ),
    ]
